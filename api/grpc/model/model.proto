/*
Package model provides the interface of the gRPC methods.

All commands for services to model management are provided by this interfaces.

Generate gRPC code:
  protoc --go_out=. --go_opt=paths=source_relative \
  --go-grpc_out=. --go-grpc_opt=paths=source_relative \
  api/grpc/model/model.proto
*/
syntax = "proto3";

package model;

option go_package = "github.com/Goboolean/core-system.command/api/grpc;model";

// ModelService
//
// Provides services to model management
service ModelService {

  rpc RegisterModel(RegisterModelRequest) returns (RegisterModelResponse) {}
  rpc EditModel(EditModelRequest) returns (EditModelResponse) {}
  rpc DeleteModel(DeleteModelRequest) returns (DeleteModelResponse) {}

  rpc GetModelInfo(GetModelInfoRequest) returns (GetModelInfoResponse) {}
  rpc GetModelList(GetModelListRequest) returns (GetModelListResponse) {}
}



// need implement
message RegisterModelRequest {
  string user_token = 1;
  // need to add model info
}

message RegisterModelResponse {
  int32 status = 1;
  string model_id = 2;
}



// need implement
message EditModelRequest {
  string user_token = 1;
  string model_id = 2;
  // need to add model info
}

message EditModelResponse {
  int32 status = 1;
}



message DeleteModelRequest {
  string user_token = 1;
  string model_id = 2;
}

message DeleteModelResponse {
  int32 status = 1;
}



// Model information query command
message GetModelInfoRequest {
  string user_token = 1; // To verify access to information
  string model_id = 2;
}

message GetModelInfoResponse {
  // need implement
}



// Model list information query command
message GetModelListRequest {
  string user_token = 1; // To verify access to information
  // need implement
}

message GetModelListResponse {
  // need implement
}