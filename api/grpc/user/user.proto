/*
Package user provides the interface of the gRPC methods.

All commands about authorization services are provided by this interfaces.

Generate gRPC code:
  protoc --go_out=. --go_opt=paths=source_relative \
  --go-grpc_out=. --go-grpc_opt=paths=source_relative \
  api/grpc/user/user.proto

   *** This file will be moved to the Authorization Server. ***
*/
syntax = "proto3";

package user;

option go_package = "github.com/Goboolean/core-system.command/api/grpc;user";

// MetadataService
//
// Provide commands that correspond to the domain for authorization
service UserService {
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc Logout(LogoutRequest) returns (LogoutResponse) {}
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse) {}
}


// Login command
message LoginRequest {
  string id = 1;
  string password = 2;
}

message LoginResponse {
  int32 status = 1;
  string user_token = 2;
}


// Logout command
message LogoutRequest {
  string user_token = 1;
}

message LogoutResponse {
  int32 status = 1;
}


// Register command
message RegisterUserRequest {
  string id = 1;
  string password = 2;
}

message RegisterUserResponse {
  int32 status = 1;
}