/*
Package simulation provides the interface of the gRPC methods.

All commands for simulation are provided by this interfaces.

Generate gRPC code:
  protoc --go_out=. --go_opt=paths=source_relative \
  --go-grpc_out=. --go-grpc_opt=paths=source_relative \
  api/grpc/simulation/simulation.proto
*/
syntax = "proto3";

package simulation;

option go_package = "github.com/Goboolean/core-system.command/api/grpc;simulation";

// simulation
//
// Provides commands for simulation.
service SimulationService {

  // Returns to the stream what state the model being simulated is in.
  // When the simulation is finished, return access_token
  // and allow the result to be retrieved from the join server.
  rpc SimulationModel(SimulationModelRequest) returns (stream SimulationStatus) {}
  rpc GetSimulationResult(GetSimulationResultRequest) returns (stream GetSimulationResultResponse) {}
  rpc GetSimulationList(GetSimulationListRequest) returns (GetSimulationListResponse) {}
}



// need implement about parameter
message SimulationModelRequest {
  string user_token = 1;
  string model_id = 2;
  string stock_id = 3;
  repeated int64 parameter = 4;
}

message SimulationStatus {
  int32 status = 1;         // simulation status
  string access_token = 2;  // token for accessing join server
}



// Simulation result information query command
message GetSimulationResultRequest {
  string user_token = 1; // To verify access to information
  string simulation_id = 2;
}

message GetSimulationResultResponse {
  int32 status = 1;
  string access_token = 2;
}



// Simulation list information query command
message GetSimulationListRequest {
  string user_token = 1; // To verify access to information
}

message GetSimulationListResponse {
  repeated string simulation_id = 1;
}